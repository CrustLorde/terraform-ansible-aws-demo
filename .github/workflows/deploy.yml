name: Deploy infra & config to AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

      - name: Terraform Apply
        run: terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve

      - name: Get instance IP
        id: getip
        run: |
          IP=$(terraform -chdir=${{ env.TF_WORKING_DIR }} output -raw public_ip)
          echo "instance_ip=$IP" >> $GITHUB_OUTPUT

      - name: Install python and ansible on runner
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip sshpass
          pip3 install ansible

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          ssh-keyscan -H ${{ steps.getip.outputs.instance_ip }} >> ~/.ssh/known_hosts

      - name: Create dynamic inventory and run Ansible
        run: |
          echo "[ec2]" > ansible/inventory.ini
          echo "${{ steps.getip.outputs.instance_ip }} ansible_user=ubuntu ansible_ssh_common_args='-o StrictHostKeyChecking=no' " >> ansible/inventory.ini
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml -u ubuntu --private-key ~/.ssh/id_rsa
